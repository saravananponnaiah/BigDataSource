package com.spark.assignment21

import org.apache.spark.SparkContext
import org.apache.spark.SparkContext._
import org.apache.log4j._
import org.apache.spark.sql.SparkSession
import org.apache.spark.sql.types._
import org.apache.spark.sql.types.{StructType, StructField, StringType}
import org.apache.spark.sql.Row

object TemperatureCaseStudy {
  def main(args : Array[String]) : Unit = {
    Logger.getLogger("org").setLevel(Level.ERROR)
    
    // Creating a spark context object to run in local machine
    val spark = SparkSession.builder.appName("TemperatureController").master("local").getOrCreate()
    import spark.implicits._
    
    // Create a dataframe and load the building csv file
    val dfBuildings = spark.sqlContext.read.format("csv")
      .option("header", "true")
      .option("inferSchema", "true")
      .load("E:/Acadgild/Data/building.csv")
    
      // Create a dataframe and load the hvac csv file
    val dfHvac = spark.sqlContext.read.format("csv")
      .option("header", "true")
      .option("inferSchema", "true")
      .load("E:/Acadgild/Data/HVAC.csv")
      
    dfBuildings.printSchema()
    dfHvac.printSchema()
    
   //dfHvac.withColumn("TempChange", when($"TargetTemp".diff($"ActualTemp") > 5, 1).otherwise(0))
    
  }
}